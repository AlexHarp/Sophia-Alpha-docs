<?php


namespace Drupal\neptune_sync\Form;


use Drupal\Core\Controller\ControllerBase;
use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;
use Drupal\neptune_sync\Graph\GraphGenerator;
use Drupal\neptune_sync\querier\Query;
use Drupal\neptune_sync\querier\QueryManager;
use Drupal\neptune_sync\querier\QueryTemplate;
use Drupal\neptune_sync\Utility\Helper;
use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Class SparqlQueryForm
 * @package Drupal\neptune_sync\Form
 * @author Alexis Harper | DoF
 */
class SparqlQueryForm extends FormBase
{
    public function getFormId()
    {
        return 'sparql_query_form';
    }

    public function buildForm(array $form, FormStateInterface $form_state)
    {
        $form['sparql_query'] = [
            '#type' => 'textarea',
            '#title' => $this->t('sparql query'),
            '#description' => $this->t('Enter a valid SparQL query below:'),
            '#title_display' => 'invisible',
            '#description_display' => 'before',
            '#autocomplete' => 'off',
            '#required' => TRUE,
        ];

        $form['actions'] = [
            '#type' => 'actions',
            '#tree' => TRUE,
        ];

        $form['actions']['submit'] = [
            '#type' => 'submit',
            '#value' => 'Run query',
            '#button_type' => 'primary',
        ];

        return $form;
    }

    public function validateForm(array &$form, FormStateInterface $form_state)
    {
        parent::validateForm($form, $form_state); // TODO: Change the autogenerated stub
    }

    public function submitForm(array &$form, FormStateInterface $form_state)
    {
        $vals = $form_state->getValues();
        $query = new Query(QueryTemplate::NEPTUNE_ENDPOINT);
        $query->setQuery($vals['sparql_query']);

        $query_mgr = new QueryManager();
        $res = $query_mgr->runCustomQuery($query);
        Helper::log($res);

        $this->messenger()->addStatus($this->t($res));
    }
}
